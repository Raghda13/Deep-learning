# -*- coding: utf-8 -*-
"""Autoencoders.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KC3KmabnwRZ-JGOe_ES-f2pa-tJIqSej
"""

import tensorflow as tf
import numpy as np
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Dense, Input
from tensorflow.keras.datasets import mnist

# Load MNIST dataset
(x_train, _), (x_test, _) = mnist.load_data()
x_train = x_train.astype('float32') / 255.
x_test = x_test.astype('float32') / 255.

# Flatten the images
x_train = x_train.reshape(len(x_train), np.prod(x_train.shape[1:]))
x_test = x_test.reshape(len(x_test), np.prod(x_test.shape[1:]))

# Build autoencoder
input_img = Input(shape=(784,))
encoder_layer = Dense(64, activation='relu')(input_img)
bottleneck = Dense(32, activation='relu')(encoder_layer)
decoder_layer = Dense(64, activation='relu')(bottleneck)
output_img = Dense(784, activation='sigmoid')(decoder_layer)

autoencoder = Model(input_img, output_img)
autoencoder.compile(optimizer='adam', loss='binary_crossentropy')
autoencoder.summary()

# Train the autoencoder
autoencoder.fit(
    x_train, x_train,
    epochs=50,  # number of times the model sees the entire dataset.
    batch_size=256, # number of samples processed at a time.
    shuffle=True,
    validation_data=(x_test, x_test)  #check performance on unseen data.
)